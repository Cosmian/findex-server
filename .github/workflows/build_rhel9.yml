---
name: RHEL

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      archive-name:
        required: true
        type: string
      target:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string
      features:
        required: false
        type: string

jobs:
  rhel9-tests:
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # ports: # not required since docker in docker
        #   - 6379:6379
      kms:
        image: ghcr.io/cosmian/kms:feat-add_digest_and_mac_kmip_operations
        ports:
          - 9998:9998

    name: ${{ inputs.archive-name }}
    runs-on: ubuntu-24.04
    container:
      image: redhat/ubi9

    steps:
      - uses: actions/checkout@v4
      - name: Checkout submodules
        run: |
          git submodule update --init --recursive

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}
          components: rustfmt, clippy

      - name: RHEL 9 prerequisites
        run: |
          set -ex

          yum -y install openssl-devel openssl
          yum -y install python-devel
          yum -y install wget nc
          yum -y install perl-IPC-Cmd perl-Digest-SHA1 perl-CPAN perl-devel

      - name: check opened ports
        run: |
          set -ex
          nc -zv redis 6379

      - name: Build and tests
        env:
          REDIS_URL: redis://redis:6379
          KMS_HOSTNAME: kms

          # Google variables
          TEST_GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_ID }}
          TEST_GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.TEST_GOOGLE_OAUTH_CLIENT_SECRET }}
          TEST_GOOGLE_OAUTH_REFRESH_TOKEN: ${{ secrets.TEST_GOOGLE_OAUTH_REFRESH_TOKEN }}
          GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY }}

          TARGET: ${{ inputs.target }}
          DEBUG_OR_RELEASE: ${{ inputs.debug_or_release }}
        run: |
          bash .github/scripts/cargo_build.sh

      - name: Upload findex-server for RHEL 9
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.archive-name }}-${{ inputs.debug_or_release }}
          path: |
            target/${{ inputs.target }}/${{ inputs.debug_or_release }}/cosmian_findex_server
            target/${{ inputs.target }}/${{ inputs.debug_or_release }}/findex
            target/${{ inputs.target }}/generate-rpm/cosmian_findex_server-*
          retention-days: 1
          if-no-files-found: error
