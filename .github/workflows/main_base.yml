---
name: CI checks

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string

jobs:
  cargo-audit:
    name: Security Audit
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1

  docker-image-release:
    if: inputs.debug_or_release == 'release'
    name: Build docker image for AMD64 and ARM64
    uses: ./.github/workflows/build_docker_image.yml
    with:
      dockerfile: Dockerfile
      registry-image: ghcr.io/cosmian/findex-server
      platforms: linux/amd64,linux/arm64

  docker-image:
    if: inputs.debug_or_release == 'debug'
    name: Build docker image for AMD64
    uses: ./.github/workflows/build_docker_image.yml
    with:
      dockerfile: Dockerfile
      registry-image: ghcr.io/cosmian/findex-server
      platforms: linux/amd64

  cargo-lint:
    uses: ./.github/workflows/clippy.yml
    with:
      toolchain: ${{ inputs.toolchain }}

  build-tests:
    uses: ./.github/workflows/build_all.yml
    secrets: inherit
    with:
      toolchain: ${{ inputs.toolchain }}
      debug_or_release: ${{ inputs.debug_or_release }}

  ##############################################################################
  ### Releases
  ##############################################################################
  package-cosmian-com:
    needs:
      - cargo-audit
      - cargo-lint
      - docker-image
      - build-tests
    runs-on: [self-hosted, not-sgx]
    container:
      image: cosmian/docker_doc_ci
      volumes:
        - /home/cosmian/.ssh/id_rsa:/root/.ssh/id_rsa

    env:
      ARCHIVE_NAMES: rhel9-${{ inputs.debug_or_release }} ubuntu_24_04-${{ inputs.debug_or_release }} macos_arm-${{ inputs.debug_or_release }}

    steps:
      - run: rm -rf windows* ubuntu* macos* rhel9*
      - uses: actions/download-artifact@v4

      - run: find .

      - name: Creating zip to be attached to release
        run: |
          apt update -y
          apt-get install -y zip
          for archive_name in $ARCHIVE_NAMES; do
            zip -r "$archive_name".zip "$archive_name"
          done
          # Warning, no windows binaries in debug
          if [ "${{ inputs.debug_or_release }}" == "release" ]; then
            zip -r "$archive_name".zip windows-release
          fi

      - name: Push to package.cosmian.com
        shell: bash
        run: |
          set -x
          if [[ "${GITHUB_REF}" =~ 'refs/tags/' ]]; then
            BRANCH="${GITHUB_REF_NAME}"
          else
            BRANCH="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi
          DESTINATION_DIR=/mnt/package/findex-server/$BRANCH
          ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa \
            *.zip \
            cosmian@package.cosmian.com:$DESTINATION_DIR/

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
